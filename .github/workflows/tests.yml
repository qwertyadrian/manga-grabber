name: "Run tests"
on:
  push:
    branches:
      - master
    paths:
      - 'manga_grabber/**'
      - 'tests/**'
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install manga-grabber
        run: poetry install --no-interaction

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest tests/ --maxfail=1 -q
          poetry run coverage xml -o coverage.xml
        env:
          TOKEN: ${{ secrets.TOKEN }}

      - name: Upload coverage to Codecov
        if: success() && github.event_name != 'pull_request'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}